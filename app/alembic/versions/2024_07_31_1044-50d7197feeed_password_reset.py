"""Password reset

Revision ID: 50d7197feeed
Revises: 52820db54f10
Create Date: 2024-07-31 10:44:49.273335+00:00

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '50d7197feeed'
down_revision: str | None = '52820db54f10'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_token_reset_password',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('user_email_hashed', sa.LargeBinary(length=32), nullable=False),
    sa.Column('token_hashed', sa.LargeBinary(length=32), nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('diary', sa.Column('language', sa.Unicode(length=15), nullable=False))
    op.drop_column('diary', 'language_code')
    op.create_index('oauth2_token_hashed_idx', 'oauth2_token', ['token_hashed'], unique=False)
    op.create_index('oauth2_token_user_app_idx', 'oauth2_token', ['user_id', 'application_id'], unique=False)
    op.alter_column('user_pref', 'app_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.add_column('user_token_account_confirm', sa.Column('user_email_hashed', sa.LargeBinary(length=32), nullable=False))
    op.add_column('user_token_email_change', sa.Column('new_email', sa.Unicode(length=254), nullable=False))
    op.add_column('user_token_email_change', sa.Column('user_email_hashed', sa.LargeBinary(length=32), nullable=False))
    op.drop_column('user_token_email_change', 'to_email')
    op.drop_column('user_token_email_change', 'from_email')
    op.add_column('user_token_email_reply', sa.Column('user_email_hashed', sa.LargeBinary(length=32), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    pass
